/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.werzuo.shfcms.view;

import com.werzuo.shfcms.common.BirthDetails;
import com.werzuo.shfcms.controller.MemberController;
import com.werzuo.shfcms.controllerfactoryimpl.ControllerFactoryImpl;
import com.werzuo.shfcms.model.Member;
import java.awt.Color;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ravindu
 */
public class BirthDayRiminderPanel extends javax.swing.JPanel {

    /**
     * Creates new form BirthDayRiminderPanel
     */
    private HomeFrame homeFrame;

    public BirthDayRiminderPanel() {
        initComponents();
        setUpUI();
    }

    public BirthDayRiminderPanel(HomeFrame homeFrame) {
        initComponents();
        setUpUI();
        this.homeFrame = homeFrame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane6 = new javax.swing.JScrollPane();
        tblTomorrow = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblYesterday = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblToday = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setLayout(null);

        jScrollPane6.setBackground(new Color(0,0,0,0));
        jScrollPane6.setOpaque(false);

        tblTomorrow.setBackground(new Color(0,0,0,0));
        tblTomorrow.setForeground(new java.awt.Color(255, 255, 255));
        tblTomorrow.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Age", "Telephone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTomorrow.setOpaque(false);
        tblTomorrow.setRowHeight(25);
        jScrollPane6.setViewportView(tblTomorrow);

        add(jScrollPane6);
        jScrollPane6.setBounds(70, 400, 660, 120);

        jScrollPane5.setBackground(new Color(0,0,0,0));
        jScrollPane5.setOpaque(false);

        tblYesterday.setBackground(new Color(0,0,0,0));
        tblYesterday.setForeground(new java.awt.Color(255, 255, 255));
        tblYesterday.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Age", "Telephone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblYesterday.setOpaque(false);
        tblYesterday.setRowHeight(25);
        jScrollPane5.setViewportView(tblYesterday);

        add(jScrollPane5);
        jScrollPane5.setBounds(70, 80, 660, 120);

        jScrollPane3.setBackground(new Color(0,0,0,0));
        jScrollPane3.setOpaque(false);

        tblToday.setBackground(new Color(0,0,0,0));
        tblToday.setForeground(new java.awt.Color(255, 255, 255));
        tblToday.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Age", "Telephone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblToday.setOpaque(false);
        tblToday.setRowHeight(25);
        jScrollPane3.setViewportView(tblToday);

        add(jScrollPane3);
        jScrollPane3.setBounds(70, 240, 660, 120);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(43, 217, 127));
        jLabel6.setText("Yesterday");
        add(jLabel6);
        jLabel6.setBounds(70, 50, 160, 30);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(43, 217, 127));
        jLabel7.setText("Today");
        add(jLabel7);
        jLabel7.setBounds(70, 210, 160, 30);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(43, 217, 127));
        jLabel5.setText("Tomorrow");
        add(jLabel5);
        jLabel5.setBounds(70, 370, 160, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Back");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        add(jLabel4);
        jLabel4.setBounds(830, 514, 80, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(43, 227, 117));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Birth Day Reminder");
        add(jLabel2);
        jLabel2.setBounds(720, 0, 250, 50);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/werzuo/shfcms/images/Untitled-1.png"))); // NOI18N
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(43, 227, 117), 2));
        add(jLabel3);
        jLabel3.setBounds(0, 0, 970, 570);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/werzuo/shfcms/images/panelBody.PNG"))); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(0, 0, 970, 570);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        DashBoardPanel a = new DashBoardPanel();
        homeFrame.panelBody.removeAll();
        a.setSize(homeFrame.panelBody.getSize());
        homeFrame.panelBody.removeAll();
        homeFrame.panelBody.add(a);
        homeFrame.panelBody.repaint();
        homeFrame.panelBody.revalidate();
    }//GEN-LAST:event_jLabel4MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable tblToday;
    private javax.swing.JTable tblTomorrow;
    private javax.swing.JTable tblYesterday;
    // End of variables declaration//GEN-END:variables

    /**
     * set up the user interface with birthdays of users
     */
    private void setUpUI() {
        try {
            getTodayBirthdays();
            getYesterdayBirthdays();
            getTommorrowBirthdays();
        } catch (SQLException ex) {
            Logger.getLogger(BirthDayRiminderPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BirthDayRiminderPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(BirthDayRiminderPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * get the today birthday list
     *
     * @throws SQLException
     * @throws ClassNotFoundException
     */
    private void getTodayBirthdays() throws SQLException, ClassNotFoundException {

        DefaultTableModel dtm = (DefaultTableModel) tblToday.getModel();
        MemberController memberController = new ControllerFactoryImpl().getMemberController();
        String date = HomeFrame.getDate();
        String[] split = date.split("-");

        ArrayList<Member> menberByDob = memberController.getmenberByDob(split[1] + "-" + split[2]);
        for (Member member : menberByDob) {
            BirthDetails birthDetails = new BirthDetails(member.getNic());
            String age = birthDetails.getAge();
            Object[] row = {member.getfName() + " " + member.getlName(), age, member.getPhoneNo()};
            dtm.addRow(row);
        }

    }

    /**
     * get the today and make a new date
     *
     * @return new date
     */
    private String getDate(String option) throws ParseException {

        String date = HomeFrame.getDate();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date myDate = dateFormat.parse(date);
        Calendar cal1 = Calendar.getInstance();
        cal1.setTime(myDate);
        if ("-".equals(option)) {
            cal1.add(Calendar.DAY_OF_YEAR, -1);
        } else {
            cal1.add(Calendar.DAY_OF_YEAR, +1);
        }
        Date newDate = cal1.getTime();

        return dateFormat.format(newDate);
    }

    /**
     * get yesterday birthday list
     *
     * @throws SQLException
     * @throws ClassNotFoundException
     * @throws ParseException
     */
    private void getYesterdayBirthdays() throws SQLException, ClassNotFoundException, ParseException {

        DefaultTableModel dtm = (DefaultTableModel) tblYesterday.getModel();
        String option = "-";
        MemberController memberController = new ControllerFactoryImpl().getMemberController();
        String date = getDate(option);
        String[] split = date.split("-");
        ArrayList<Member> menberByDob = memberController.getmenberByDob(split[1] + "-" + split[2]);
        for (Member member : menberByDob) {
            BirthDetails birthDetails = new BirthDetails(member.getNic());
            String age = birthDetails.getAge();
            Object[] row = {member.getfName() + " " + member.getlName(), age, member.getPhoneNo()};
            dtm.addRow(row);
        }
    }

    /**
     * get tomorrow birthday list
     *
     * @throws SQLException
     * @throws ClassNotFoundException
     * @throws ParseException
     */
    private void getTommorrowBirthdays() throws SQLException, ClassNotFoundException, ParseException {

        DefaultTableModel dtm = (DefaultTableModel) tblTomorrow.getModel();
        String option = "+";
        MemberController memberController = new ControllerFactoryImpl().getMemberController();
        String date = getDate(option);
        String[] split = date.split("-");
        ArrayList<Member> menberByDob = memberController.getmenberByDob(split[1] + "-" + split[2]);
        for (Member member : menberByDob) {
            BirthDetails birthDetails = new BirthDetails(member.getNic());
            String age = birthDetails.getAge();
            Object[] row = {member.getfName() + " " + member.getlName(), age, member.getPhoneNo()};
            dtm.addRow(row);
        }
    }
}
