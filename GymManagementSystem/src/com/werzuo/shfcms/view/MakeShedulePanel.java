/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.werzuo.shfcms.view;

import com.werzuo.shfcms.common.IDGenarator;
import com.werzuo.shfcms.common.Validation;
import com.werzuo.shfcms.controller.ScheduleController;
import com.werzuo.shfcms.controllerfactory.ControllerFactory;
import com.werzuo.shfcms.controllerfactoryimpl.ControllerFactoryImpl;
import com.werzuo.shfcms.model.CreateSchedule;
import com.werzuo.shfcms.model.Exercise;
import com.werzuo.shfcms.model.Measurement;
import com.werzuo.shfcms.model.Schedule;
import com.werzuo.shfcms.model.ScheduleDetails;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ravindu
 */
public class MakeShedulePanel extends javax.swing.JPanel {

    /**
     * Creates new form MakeShedulePanel
     */
    private HomeFrame homeFrame;
    private ControllerFactory controllerFactory = new ControllerFactoryImpl();
    DefaultTableModel dtm;
    private Measurement measurement;
    private String memberShipNumber;

    public MakeShedulePanel(HomeFrame homeFrame, Measurement measurement, String memberShipNumber) {
        initComponents();
        this.homeFrame = homeFrame;
        this.measurement = measurement;
        this.memberShipNumber = memberShipNumber;
        getOldValues(memberShipNumber);
        setNewValues(measurement);
        LoadExercise();

        setComparision();

    }

    public MakeShedulePanel() {
        initComponents();
        setComparision();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        txtRep = new javax.swing.JTextField();
        txtSet = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        lblArrowCalfR = new javax.swing.JLabel();
        lblNewCalfR = new javax.swing.JTextField();
        lblArrowCalfL = new javax.swing.JLabel();
        lblNewCalfL = new javax.swing.JTextField();
        lblOldCalfL = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        lblOldChest = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        lblArrowChest = new javax.swing.JLabel();
        lblNewChest = new javax.swing.JTextField();
        lblOldAbs = new javax.swing.JTextField();
        lblNewAbs = new javax.swing.JTextField();
        lblOldCalfR = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        lblArrowAbs = new javax.swing.JLabel();
        lblOldForearmR = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        lblNewForearmR = new javax.swing.JTextField();
        lblArrowForearmR = new javax.swing.JLabel();
        lblOldThightR = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        lblNewThightR = new javax.swing.JTextField();
        lblArrowThightR = new javax.swing.JLabel();
        lblArrowArmL = new javax.swing.JLabel();
        lblNewArmL = new javax.swing.JTextField();
        lblOldArmL = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        lblOldArmR = new javax.swing.JTextField();
        lblOldForearmL = new javax.swing.JTextField();
        lblNewForearmL = new javax.swing.JTextField();
        lblNewArmR = new javax.swing.JTextField();
        lblArrowArmR = new javax.swing.JLabel();
        lblArrowForearmL = new javax.swing.JLabel();
        lblOldThightL = new javax.swing.JTextField();
        lblArrowNeck = new javax.swing.JLabel();
        lblOldNeck = new javax.swing.JTextField();
        ComboStartDate = new org.jdesktop.swingx.JXDatePicker();
        comboEndDate = new org.jdesktop.swingx.JXDatePicker();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        lblArrowThightL = new javax.swing.JLabel();
        lblNewNeck = new javax.swing.JTextField();
        lblNewThightL = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        lblOldHips = new javax.swing.JTextField();
        lblNewHips = new javax.swing.JTextField();
        lblArrowHips = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cmbExercise = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblArrowWaist = new javax.swing.JLabel();
        lblNewWaist = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblOldWaist = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jTextField24 = new javax.swing.JTextField();
        jTextField25 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        setLayout(null);

        jScrollPane1.setBackground(new Color(0,0,0,0));

        jTable1.setBackground(new Color(0,0,0,0));
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Eid", "Exercies", "Set", "Rep"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(25);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(40);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(40);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(50);
        }
        jTable1.setOpaque(false);
        ((DefaultTableCellRenderer)jTable1.getDefaultRenderer(Object.class)).setOpaque(false);

        add(jScrollPane1);
        jScrollPane1.setBounds(480, 120, 430, 260);
        jScrollPane1.setOpaque(false);
        jScrollPane1.getViewport().setOpaque(false);

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("End Date");
        add(jLabel18);
        jLabel18.setBounds(710, 450, 60, 30);

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("StartDay");
        add(jLabel20);
        jLabel20.setBounds(490, 450, 60, 30);

        jLabel40.setBackground(new java.awt.Color(204, 0, 0));
        jLabel40.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(204, 0, 0));
        jLabel40.setText("R");
        add(jLabel40);
        jLabel40.setBounds(410, 530, 30, 30);

        txtRep.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtRep.setForeground(new java.awt.Color(255, 255, 255));
        txtRep.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRep.setCaretColor(new java.awt.Color(255, 255, 255));
        txtRep.setOpaque(false);
        txtRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRepActionPerformed(evt);
            }
        });
        txtRep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRepKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRepKeyReleased(evt);
            }
        });
        add(txtRep);
        txtRep.setBounds(760, 70, 100, 30);

        txtSet.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtSet.setForeground(new java.awt.Color(255, 255, 255));
        txtSet.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSet.setCaretColor(new java.awt.Color(255, 255, 255));
        txtSet.setOpaque(false);
        txtSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSetActionPerformed(evt);
            }
        });
        txtSet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSetKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSetKeyReleased(evt);
            }
        });
        add(txtSet);
        txtSet.setBounds(560, 70, 100, 30);

        jLabel41.setBackground(new java.awt.Color(204, 0, 0));
        jLabel41.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(204, 0, 0));
        jLabel41.setText("L");
        add(jLabel41);
        jLabel41.setBounds(410, 250, 30, 30);

        jLabel42.setBackground(new java.awt.Color(204, 0, 0));
        jLabel42.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(204, 0, 0));
        jLabel42.setText("L");
        add(jLabel42);
        jLabel42.setBounds(410, 330, 30, 30);

        jLabel43.setBackground(new java.awt.Color(204, 0, 0));
        jLabel43.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(204, 0, 0));
        jLabel43.setText("R");
        add(jLabel43);
        jLabel43.setBounds(410, 290, 30, 30);

        jLabel44.setBackground(new java.awt.Color(204, 0, 0));
        jLabel44.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(204, 0, 0));
        jLabel44.setText("R");
        add(jLabel44);
        jLabel44.setBounds(410, 370, 30, 30);

        jLabel45.setBackground(new java.awt.Color(204, 0, 0));
        jLabel45.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(204, 0, 0));
        jLabel45.setText("L");
        add(jLabel45);
        jLabel45.setBounds(410, 410, 30, 30);

        jLabel46.setBackground(new java.awt.Color(204, 0, 0));
        jLabel46.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(204, 0, 0));
        jLabel46.setText("L");
        add(jLabel46);
        jLabel46.setBounds(410, 490, 30, 30);

        jLabel47.setBackground(new java.awt.Color(204, 0, 0));
        jLabel47.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(204, 0, 0));
        jLabel47.setText("R");
        add(jLabel47);
        jLabel47.setBounds(410, 450, 30, 30);

        jLabel39.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("Calf");
        add(jLabel39);
        jLabel39.setBounds(30, 530, 60, 30);
        add(lblArrowCalfR);
        lblArrowCalfR.setBounds(370, 530, 30, 30);

        lblNewCalfR.setEditable(false);
        lblNewCalfR.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblNewCalfR.setForeground(new java.awt.Color(255, 255, 255));
        lblNewCalfR.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblNewCalfR.setText("0");
        lblNewCalfR.setCaretColor(new java.awt.Color(255, 255, 255));
        lblNewCalfR.setOpaque(false);
        add(lblNewCalfR);
        lblNewCalfR.setBounds(290, 530, 70, 30);
        add(lblArrowCalfL);
        lblArrowCalfL.setBounds(370, 490, 30, 30);

        lblNewCalfL.setEditable(false);
        lblNewCalfL.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblNewCalfL.setForeground(new java.awt.Color(255, 255, 255));
        lblNewCalfL.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblNewCalfL.setText("0");
        lblNewCalfL.setCaretColor(new java.awt.Color(255, 255, 255));
        lblNewCalfL.setOpaque(false);
        add(lblNewCalfL);
        lblNewCalfL.setBounds(290, 490, 70, 30);

        lblOldCalfL.setEditable(false);
        lblOldCalfL.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblOldCalfL.setForeground(new java.awt.Color(255, 255, 255));
        lblOldCalfL.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblOldCalfL.setText("0");
        lblOldCalfL.setCaretColor(new java.awt.Color(255, 255, 255));
        lblOldCalfL.setOpaque(false);
        add(lblOldCalfL);
        lblOldCalfL.setBounds(170, 490, 70, 30);

        jLabel37.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Calf");
        add(jLabel37);
        jLabel37.setBounds(30, 490, 60, 30);

        lblOldChest.setEditable(false);
        lblOldChest.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblOldChest.setForeground(new java.awt.Color(255, 255, 255));
        lblOldChest.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblOldChest.setText("0");
        lblOldChest.setCaretColor(new java.awt.Color(255, 255, 255));
        lblOldChest.setOpaque(false);
        lblOldChest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblOldChestActionPerformed(evt);
            }
        });
        add(lblOldChest);
        lblOldChest.setBounds(170, 50, 70, 30);

        jLabel35.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Chest");
        add(jLabel35);
        jLabel35.setBounds(30, 50, 100, 30);
        add(lblArrowChest);
        lblArrowChest.setBounds(370, 50, 30, 30);

        lblNewChest.setEditable(false);
        lblNewChest.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblNewChest.setForeground(new java.awt.Color(255, 255, 255));
        lblNewChest.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblNewChest.setText("0");
        lblNewChest.setCaretColor(new java.awt.Color(255, 255, 255));
        lblNewChest.setOpaque(false);
        add(lblNewChest);
        lblNewChest.setBounds(290, 50, 70, 30);

        lblOldAbs.setEditable(false);
        lblOldAbs.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblOldAbs.setForeground(new java.awt.Color(255, 255, 255));
        lblOldAbs.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblOldAbs.setText("0");
        lblOldAbs.setCaretColor(new java.awt.Color(255, 255, 255));
        lblOldAbs.setOpaque(false);
        add(lblOldAbs);
        lblOldAbs.setBounds(170, 90, 70, 30);

        lblNewAbs.setEditable(false);
        lblNewAbs.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblNewAbs.setForeground(new java.awt.Color(255, 255, 255));
        lblNewAbs.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblNewAbs.setText("0");
        lblNewAbs.setCaretColor(new java.awt.Color(255, 255, 255));
        lblNewAbs.setOpaque(false);
        add(lblNewAbs);
        lblNewAbs.setBounds(290, 90, 70, 30);

        lblOldCalfR.setEditable(false);
        lblOldCalfR.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblOldCalfR.setForeground(new java.awt.Color(255, 255, 255));
        lblOldCalfR.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblOldCalfR.setText("0");
        lblOldCalfR.setCaretColor(new java.awt.Color(255, 255, 255));
        lblOldCalfR.setOpaque(false);
        lblOldCalfR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblOldCalfRActionPerformed(evt);
            }
        });
        add(lblOldCalfR);
        lblOldCalfR.setBounds(170, 530, 70, 30);

        jLabel29.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Abdomen");
        add(jLabel29);
        jLabel29.setBounds(30, 90, 100, 30);
        add(lblArrowAbs);
        lblArrowAbs.setBounds(370, 90, 30, 30);

        lblOldForearmR.setEditable(false);
        lblOldForearmR.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblOldForearmR.setForeground(new java.awt.Color(255, 255, 255));
        lblOldForearmR.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblOldForearmR.setText("0");
        lblOldForearmR.setCaretColor(new java.awt.Color(255, 255, 255));
        lblOldForearmR.setOpaque(false);
        add(lblOldForearmR);
        lblOldForearmR.setBounds(170, 450, 70, 30);

        jLabel27.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Forarm");
        add(jLabel27);
        jLabel27.setBounds(30, 450, 60, 30);

        lblNewForearmR.setEditable(false);
        lblNewForearmR.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblNewForearmR.setForeground(new java.awt.Color(255, 255, 255));
        lblNewForearmR.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblNewForearmR.setText("0");
        lblNewForearmR.setCaretColor(new java.awt.Color(255, 255, 255));
        lblNewForearmR.setOpaque(false);
        add(lblNewForearmR);
        lblNewForearmR.setBounds(290, 450, 70, 30);
        add(lblArrowForearmR);
        lblArrowForearmR.setBounds(370, 450, 30, 30);

        lblOldThightR.setEditable(false);
        lblOldThightR.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblOldThightR.setForeground(new java.awt.Color(255, 255, 255));
        lblOldThightR.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblOldThightR.setText("0");
        lblOldThightR.setCaretColor(new java.awt.Color(255, 255, 255));
        lblOldThightR.setOpaque(false);
        add(lblOldThightR);
        lblOldThightR.setBounds(170, 290, 70, 30);

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Thight");
        add(jLabel19);
        jLabel19.setBounds(30, 290, 60, 30);

        lblNewThightR.setEditable(false);
        lblNewThightR.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblNewThightR.setForeground(new java.awt.Color(255, 255, 255));
        lblNewThightR.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblNewThightR.setText("0");
        lblNewThightR.setCaretColor(new java.awt.Color(255, 255, 255));
        lblNewThightR.setOpaque(false);
        add(lblNewThightR);
        lblNewThightR.setBounds(290, 290, 70, 30);
        add(lblArrowThightR);
        lblArrowThightR.setBounds(370, 290, 30, 30);
        add(lblArrowArmL);
        lblArrowArmL.setBounds(370, 330, 30, 30);

        lblNewArmL.setEditable(false);
        lblNewArmL.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblNewArmL.setForeground(new java.awt.Color(255, 255, 255));
        lblNewArmL.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblNewArmL.setText("0");
        lblNewArmL.setCaretColor(new java.awt.Color(255, 255, 255));
        lblNewArmL.setOpaque(false);
        add(lblNewArmL);
        lblNewArmL.setBounds(290, 330, 70, 30);

        lblOldArmL.setEditable(false);
        lblOldArmL.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblOldArmL.setForeground(new java.awt.Color(255, 255, 255));
        lblOldArmL.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblOldArmL.setText("0");
        lblOldArmL.setCaretColor(new java.awt.Color(255, 255, 255));
        lblOldArmL.setOpaque(false);
        add(lblOldArmL);
        lblOldArmL.setBounds(170, 330, 70, 30);

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Arm");
        add(jLabel22);
        jLabel22.setBounds(30, 330, 60, 30);

        jLabel23.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Arm");
        add(jLabel23);
        jLabel23.setBounds(30, 370, 60, 30);

        jLabel24.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Forarm");
        add(jLabel24);
        jLabel24.setBounds(30, 410, 60, 30);

        lblOldArmR.setEditable(false);
        lblOldArmR.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblOldArmR.setForeground(new java.awt.Color(255, 255, 255));
        lblOldArmR.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblOldArmR.setText("0");
        lblOldArmR.setCaretColor(new java.awt.Color(255, 255, 255));
        lblOldArmR.setOpaque(false);
        lblOldArmR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblOldArmRActionPerformed(evt);
            }
        });
        add(lblOldArmR);
        lblOldArmR.setBounds(170, 370, 70, 30);

        lblOldForearmL.setEditable(false);
        lblOldForearmL.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblOldForearmL.setForeground(new java.awt.Color(255, 255, 255));
        lblOldForearmL.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblOldForearmL.setText("0");
        lblOldForearmL.setCaretColor(new java.awt.Color(255, 255, 255));
        lblOldForearmL.setOpaque(false);
        add(lblOldForearmL);
        lblOldForearmL.setBounds(170, 410, 70, 30);

        lblNewForearmL.setEditable(false);
        lblNewForearmL.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblNewForearmL.setForeground(new java.awt.Color(255, 255, 255));
        lblNewForearmL.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblNewForearmL.setText("0");
        lblNewForearmL.setCaretColor(new java.awt.Color(255, 255, 255));
        lblNewForearmL.setOpaque(false);
        add(lblNewForearmL);
        lblNewForearmL.setBounds(290, 410, 70, 30);

        lblNewArmR.setEditable(false);
        lblNewArmR.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblNewArmR.setForeground(new java.awt.Color(255, 255, 255));
        lblNewArmR.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblNewArmR.setText("0");
        lblNewArmR.setCaretColor(new java.awt.Color(255, 255, 255));
        lblNewArmR.setOpaque(false);
        add(lblNewArmR);
        lblNewArmR.setBounds(290, 370, 70, 30);
        add(lblArrowArmR);
        lblArrowArmR.setBounds(370, 370, 30, 30);
        add(lblArrowForearmL);
        lblArrowForearmL.setBounds(370, 410, 30, 30);

        lblOldThightL.setEditable(false);
        lblOldThightL.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblOldThightL.setForeground(new java.awt.Color(255, 255, 255));
        lblOldThightL.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblOldThightL.setText("0");
        lblOldThightL.setCaretColor(new java.awt.Color(255, 255, 255));
        lblOldThightL.setOpaque(false);
        add(lblOldThightL);
        lblOldThightL.setBounds(170, 250, 70, 30);
        add(lblArrowNeck);
        lblArrowNeck.setBounds(370, 210, 30, 30);

        lblOldNeck.setEditable(false);
        lblOldNeck.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblOldNeck.setForeground(new java.awt.Color(255, 255, 255));
        lblOldNeck.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblOldNeck.setText("0");
        lblOldNeck.setCaretColor(new java.awt.Color(255, 255, 255));
        lblOldNeck.setOpaque(false);
        add(lblOldNeck);
        lblOldNeck.setBounds(170, 210, 70, 30);
        add(ComboStartDate);
        ComboStartDate.setBounds(560, 450, 130, 30);
        add(comboEndDate);
        comboEndDate.setBounds(780, 450, 130, 30);

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Neck");
        add(jLabel16);
        jLabel16.setBounds(30, 210, 100, 30);

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Thight");
        add(jLabel17);
        jLabel17.setBounds(30, 250, 60, 30);
        add(lblArrowThightL);
        lblArrowThightL.setBounds(370, 250, 30, 30);

        lblNewNeck.setEditable(false);
        lblNewNeck.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblNewNeck.setForeground(new java.awt.Color(255, 255, 255));
        lblNewNeck.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblNewNeck.setText("0");
        lblNewNeck.setCaretColor(new java.awt.Color(255, 255, 255));
        lblNewNeck.setOpaque(false);
        lblNewNeck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblNewNeckActionPerformed(evt);
            }
        });
        add(lblNewNeck);
        lblNewNeck.setBounds(290, 210, 70, 30);

        lblNewThightL.setEditable(false);
        lblNewThightL.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblNewThightL.setForeground(new java.awt.Color(255, 255, 255));
        lblNewThightL.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblNewThightL.setText("0");
        lblNewThightL.setCaretColor(new java.awt.Color(255, 255, 255));
        lblNewThightL.setOpaque(false);
        add(lblNewThightL);
        lblNewThightL.setBounds(290, 250, 70, 30);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Hips Buttooks");
        add(jLabel13);
        jLabel13.setBounds(30, 170, 100, 30);

        lblOldHips.setEditable(false);
        lblOldHips.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblOldHips.setForeground(new java.awt.Color(255, 255, 255));
        lblOldHips.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblOldHips.setText("0");
        lblOldHips.setCaretColor(new java.awt.Color(255, 255, 255));
        lblOldHips.setOpaque(false);
        add(lblOldHips);
        lblOldHips.setBounds(170, 170, 70, 30);

        lblNewHips.setEditable(false);
        lblNewHips.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblNewHips.setForeground(new java.awt.Color(255, 255, 255));
        lblNewHips.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblNewHips.setText("0");
        lblNewHips.setCaretColor(new java.awt.Color(255, 255, 255));
        lblNewHips.setOpaque(false);
        add(lblNewHips);
        lblNewHips.setBounds(290, 170, 70, 30);
        add(lblArrowHips);
        lblArrowHips.setBounds(370, 170, 30, 30);

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Confirm");
        jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        add(jLabel12);
        jLabel12.setBounds(810, 500, 100, 30);

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Remove");
        jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });
        add(jLabel11);
        jLabel11.setBounds(480, 400, 100, 30);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Set");
        add(jLabel10);
        jLabel10.setBounds(500, 70, 30, 30);

        cmbExercise.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cmbExercise.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbExerciseItemStateChanged(evt);
            }
        });
        cmbExercise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbExerciseActionPerformed(evt);
            }
        });
        add(cmbExercise);
        cmbExercise.setBounds(600, 20, 170, 30);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Exercise");
        add(jLabel8);
        jLabel8.setBounds(490, 20, 110, 30);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Rep");
        add(jLabel9);
        jLabel9.setBounds(690, 70, 30, 30);
        add(lblArrowWaist);
        lblArrowWaist.setBounds(370, 130, 30, 30);

        lblNewWaist.setEditable(false);
        lblNewWaist.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblNewWaist.setForeground(new java.awt.Color(255, 255, 255));
        lblNewWaist.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblNewWaist.setText("0");
        lblNewWaist.setCaretColor(new java.awt.Color(255, 255, 255));
        lblNewWaist.setOpaque(false);
        add(lblNewWaist);
        lblNewWaist.setBounds(290, 130, 70, 30);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(43, 227, 117));
        jLabel7.setText("New");
        add(jLabel7);
        jLabel7.setBounds(300, 20, 60, 20);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(43, 227, 117));
        jLabel6.setText("Old");
        add(jLabel6);
        jLabel6.setBounds(190, 20, 60, 20);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Waist");
        add(jLabel5);
        jLabel5.setBounds(30, 130, 100, 30);

        lblOldWaist.setEditable(false);
        lblOldWaist.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblOldWaist.setForeground(new java.awt.Color(255, 255, 255));
        lblOldWaist.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblOldWaist.setText("0");
        lblOldWaist.setCaretColor(new java.awt.Color(255, 255, 255));
        lblOldWaist.setOpaque(false);
        add(lblOldWaist);
        lblOldWaist.setBounds(170, 130, 70, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(43, 227, 117));
        jLabel4.setText("Measurements");
        add(jLabel4);
        jLabel4.setBounds(30, 20, 140, 20);

        jLabel48.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(43, 227, 117)));
        add(jLabel48);
        jLabel48.setBounds(460, 10, 490, 550);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/werzuo/shfcms/images/Untitled-1.png"))); // NOI18N
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(43, 227, 117), 2));
        add(jLabel3);
        jLabel3.setBounds(0, 0, 970, 570);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/werzuo/shfcms/images/panelBody.PNG"))); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(0, 0, 970, 570);

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/werzuo/shfcms/images/Untitled-1.png"))); // NOI18N
        jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(43, 227, 117), 2));
        add(jLabel31);
        jLabel31.setBounds(0, 0, 980, 570);

        jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        add(jLabel32);
        jLabel32.setBounds(380, 90, 30, 30);

        jTextField24.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jTextField24.setForeground(new java.awt.Color(255, 255, 255));
        jTextField24.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField24.setCaretColor(new java.awt.Color(255, 255, 255));
        jTextField24.setOpaque(false);
        add(jTextField24);
        jTextField24.setBounds(270, 90, 80, 30);

        jTextField25.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jTextField25.setForeground(new java.awt.Color(255, 255, 255));
        jTextField25.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField25.setCaretColor(new java.awt.Color(255, 255, 255));
        jTextField25.setOpaque(false);
        add(jTextField25);
        jTextField25.setBounds(150, 90, 80, 30);

        jLabel33.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Measurements");
        add(jLabel33);
        jLabel33.setBounds(30, 90, 100, 30);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Rep");
        add(jLabel14);
        jLabel14.setBounds(700, 160, 30, 30);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Set");
        add(jLabel15);
        jLabel15.setBounds(500, 160, 30, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void lblOldChestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblOldChestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lblOldChestActionPerformed

    private void txtRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRepActionPerformed
        if (txtSet.getText().isEmpty()) {
            new OptionPaneAddedSuccess(homeFrame, true, " \"Set\" Feild Is Empty");
        } else {
            addToTable();
        }
    }//GEN-LAST:event_txtRepActionPerformed

    private void txtSetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSetKeyPressed
        if (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE) {
            Toolkit.getDefaultToolkit();
            Validation.priceText(txtSet);
        }
    }//GEN-LAST:event_txtSetKeyPressed

    private void txtSetKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSetKeyReleased
        if (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE) {
            Toolkit.getDefaultToolkit();
            Validation.priceText(txtSet);
        }
    }//GEN-LAST:event_txtSetKeyReleased

    private void txtRepKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRepKeyPressed
        if (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE) {
            Toolkit.getDefaultToolkit();
            Validation.priceText(txtRep);
        }
    }//GEN-LAST:event_txtRepKeyPressed

    private void txtRepKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRepKeyReleased
        if (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE) {
            Toolkit.getDefaultToolkit();
            Validation.priceText(txtRep);
        }
    }//GEN-LAST:event_txtRepKeyReleased

    private void lblNewNeckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblNewNeckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lblNewNeckActionPerformed

    private void lblOldArmRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblOldArmRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lblOldArmRActionPerformed

    private void lblOldCalfRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblOldCalfRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lblOldCalfRActionPerformed

    private void cmbExerciseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbExerciseItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbExerciseItemStateChanged

    private void txtSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSetActionPerformed
        txtRep.requestFocus();
    }//GEN-LAST:event_txtSetActionPerformed

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        createNewSchedule();
    }//GEN-LAST:event_jLabel12MouseClicked

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        dtm = (DefaultTableModel) jTable1.getModel();
        dtm.removeRow(jTable1.getSelectedRow());
    }//GEN-LAST:event_jLabel11MouseClicked

    private void cmbExerciseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbExerciseActionPerformed
        txtSet.requestFocus();
        txtRep.setText("");
        txtSet.setText("");
    }//GEN-LAST:event_cmbExerciseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXDatePicker ComboStartDate;
    private javax.swing.JComboBox cmbExercise;
    private org.jdesktop.swingx.JXDatePicker comboEndDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JLabel lblArrowAbs;
    private javax.swing.JLabel lblArrowArmL;
    private javax.swing.JLabel lblArrowArmR;
    private javax.swing.JLabel lblArrowCalfL;
    private javax.swing.JLabel lblArrowCalfR;
    private javax.swing.JLabel lblArrowChest;
    private javax.swing.JLabel lblArrowForearmL;
    private javax.swing.JLabel lblArrowForearmR;
    private javax.swing.JLabel lblArrowHips;
    private javax.swing.JLabel lblArrowNeck;
    private javax.swing.JLabel lblArrowThightL;
    private javax.swing.JLabel lblArrowThightR;
    private javax.swing.JLabel lblArrowWaist;
    private javax.swing.JTextField lblNewAbs;
    private javax.swing.JTextField lblNewArmL;
    private javax.swing.JTextField lblNewArmR;
    private javax.swing.JTextField lblNewCalfL;
    private javax.swing.JTextField lblNewCalfR;
    private javax.swing.JTextField lblNewChest;
    private javax.swing.JTextField lblNewForearmL;
    private javax.swing.JTextField lblNewForearmR;
    private javax.swing.JTextField lblNewHips;
    private javax.swing.JTextField lblNewNeck;
    private javax.swing.JTextField lblNewThightL;
    private javax.swing.JTextField lblNewThightR;
    private javax.swing.JTextField lblNewWaist;
    private javax.swing.JTextField lblOldAbs;
    private javax.swing.JTextField lblOldArmL;
    private javax.swing.JTextField lblOldArmR;
    private javax.swing.JTextField lblOldCalfL;
    private javax.swing.JTextField lblOldCalfR;
    private javax.swing.JTextField lblOldChest;
    private javax.swing.JTextField lblOldForearmL;
    private javax.swing.JTextField lblOldForearmR;
    private javax.swing.JTextField lblOldHips;
    private javax.swing.JTextField lblOldNeck;
    private javax.swing.JTextField lblOldThightL;
    private javax.swing.JTextField lblOldThightR;
    private javax.swing.JTextField lblOldWaist;
    private javax.swing.JTextField txtRep;
    private javax.swing.JTextField txtSet;
    // End of variables declaration//GEN-END:variables

    /**
     * This method is designed to set visibility of arrows
     */
    private void setComparision() {
        compaireLabels(lblOldChest, lblNewChest, lblArrowChest);
        compaireLabels(lblOldAbs, lblNewAbs, lblArrowAbs);
        compaireLabels(lblOldWaist, lblNewWaist, lblArrowWaist);
        compaireLabels(lblOldHips, lblNewHips, lblArrowHips);
        compaireLabels(lblOldNeck, lblNewNeck, lblArrowNeck);
        compaireLabels(lblOldThightL, lblNewThightL, lblArrowThightL);
        compaireLabels(lblOldThightR, lblNewThightR, lblArrowThightR);
        compaireLabels(lblOldArmL, lblNewArmL, lblArrowArmL);
        compaireLabels(lblOldArmR, lblNewArmR, lblArrowArmR);
        compaireLabels(lblOldForearmL, lblNewForearmL, lblArrowForearmL);
        compaireLabels(lblOldForearmR, lblNewForearmR, lblArrowForearmR);
        compaireLabels(lblOldCalfL, lblNewCalfL, lblArrowCalfL);
        compaireLabels(lblOldCalfR, lblNewCalfR, lblArrowCalfR);
    }

    public void compaireLabels(JTextField oldValue, JTextField newValue, JLabel imageLabel) {
        String old = oldValue.getText();
        String neww = newValue.getText();
        double oldVal = Double.parseDouble(old);
        double newVal = Double.parseDouble(neww);

        if (newVal > oldVal) {
            imageLabel.setIcon(new ImageIcon("./src/com/werzuo/shfcms/images/greenUp.png"));
        } else if (oldVal == newVal) {
            imageLabel.setIcon(new ImageIcon("./src/com/werzuo/shfcms/images/equal.png"));
        } else {
            imageLabel.setIcon(new ImageIcon("./src/com/werzuo/shfcms/images/redDown.png"));
        }
    }

    /**
     * set the new measurement's values
     *
     * @param measurement
     */
    private void setNewValues(Measurement measurement) {
        lblNewChest.setText(measurement.getChest() + "");
        lblNewAbs.setText(measurement.getAbdomen() + "");
        lblNewWaist.setText(measurement.getWaist() + "");
        lblNewHips.setText(measurement.getHipsButtooks() + "");
        lblNewNeck.setText(measurement.getNeck() + "");
        lblNewThightL.setText(measurement.getThightLeft() + "");
        lblNewThightR.setText(measurement.getThightRight() + "");
        lblNewArmL.setText(measurement.getArmLeft() + "");
        lblNewArmR.setText(measurement.getArmRight() + "");
        lblNewForearmL.setText(measurement.getForearmLeft() + "");
        lblNewForearmR.setText(measurement.getForearmRight() + "");
        lblNewCalfL.setText(measurement.getCalfLeft() + "");
        lblNewCalfR.setText(measurement.getCalfRight() + "");
    }

    /**
     * set the old measurement values
     *
     * @param memberShipNumber
     */
    private void getOldValues(String memberShipNumber) {
        try {
            Schedule currentSchedule = controllerFactory.getScheduleController().getCurrentSchedule(memberShipNumber);
            if (null == currentSchedule) {
                lblOldChest.setText("0");
                lblOldAbs.setText("0");
                lblOldWaist.setText("0");
                lblOldHips.setText("0");
                lblOldNeck.setText("0");
                lblOldThightL.setText("0");
                lblOldThightR.setText("0");
                lblOldArmL.setText("0");
                lblOldArmR.setText("0");
                lblOldForearmL.setText("0");
                lblOldForearmR.setText("0");
                lblOldCalfL.setText("0");
                lblOldCalfR.setText("0");
            } else {
                Measurement measurement = controllerFactory.getMesurmentController().searchMeasurmentByScheduleId(currentSchedule.getScheduleID());
                if (measurement != null) {
                    lblOldChest.setText(measurement.getChest() + "");
                    lblOldAbs.setText(measurement.getAbdomen() + "");
                    lblOldWaist.setText(measurement.getWaist() + "");
                    lblOldHips.setText(measurement.getHipsButtooks() + "");
                    lblOldNeck.setText(measurement.getNeck() + "");
                    lblOldThightL.setText(measurement.getThightLeft() + "");
                    lblOldThightR.setText(measurement.getThightRight() + "");
                    lblOldArmL.setText(measurement.getArmLeft() + "");
                    lblOldArmR.setText(measurement.getArmRight() + "");
                    lblOldForearmL.setText(measurement.getForearmLeft() + "");
                    lblOldForearmR.setText(measurement.getForearmRight() + "");
                    lblOldCalfL.setText(measurement.getCalfLeft() + "");
                    lblOldCalfR.setText(measurement.getCalfRight() + "");
                }

            }

        } catch (SQLException ex) {
            Logger.getLogger(MakeShedulePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MakeShedulePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * load exercise to combo
     */
    private void LoadExercise() {
        cmbExercise.removeAll();
        try {
            ArrayList<Exercise> allExercises = controllerFactory.getExerciseController().getAllExercises();

            for (Exercise allExercise : allExercises) {
                cmbExercise.addItem(allExercise.getDescription());
            }
        } catch (SQLException ex) {
            Logger.getLogger(MakeShedulePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MakeShedulePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * add exercise to the table
     */
    private void addToTable() {
        dtm = (DefaultTableModel) jTable1.getModel();

        String exercise = cmbExercise.getSelectedItem().toString();
        String eid = getEid(exercise);
        String rep = txtRep.getText();
        String set = txtSet.getText();

        Object[] row = {eid, exercise, rep, set};
        dtm.addRow(row);
        txtSet.setText("");
        txtRep.setText("");
        txtSet.requestFocus();
    }

    /**
     * get new Id
     *
     * @param exercise
     * @return
     */
    private String getEid(String exercise) {
        String eid = null;
        try {
            Exercise searchExercisebyEid = controllerFactory.getExerciseController().searchExercisebyEid(exercise);
            if (searchExercisebyEid != null) {
                eid = searchExercisebyEid.getEid();
            }
        } catch (SQLException ex) {
            Logger.getLogger(MakeShedulePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MakeShedulePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        return eid;
    }

    private String getFormatedDate(Date date) {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String newDate = sdf.format(date);

        return newDate;
    }

    /**
     * create the new schedule and send data to the database
     */
    private void createNewSchedule() {
        dtm = (DefaultTableModel) jTable1.getModel();

        String scheduleID = sheduleID();
        String SheduleNumber = getLastScheduleNum();
        measurement.setScheduleId(scheduleID);
        Date startDateTemp = ComboStartDate.getDate();
        Date endDateTemp = comboEndDate.getDate();
        String startDate = getFormatedDate(startDateTemp);
        String endDate = getFormatedDate(endDateTemp);
        String cid = memberShipNumber;

        ArrayList<ScheduleDetails> scheduleDetailst = new ArrayList<>();
        Schedule schedule = new Schedule(scheduleID, SheduleNumber, startDate, endDate, cid);

        for (int i = 0; i < dtm.getRowCount(); i++) {
            String schdeuleDetailsID = null;
            String set = jTable1.getValueAt(i, 2).toString();
            String rep = jTable1.getValueAt(i, 3).toString();
            String eid = jTable1.getValueAt(i, 0).toString();

            ScheduleDetails scheduleDetails = new ScheduleDetails(schdeuleDetailsID, set, rep, scheduleID, eid);

            scheduleDetailst.add(scheduleDetails);

        }
        CreateSchedule createSchedule = new CreateSchedule(measurement, schedule, scheduleDetailst);
        ScheduleController scheduleController = controllerFactory.getScheduleController();

        try {
            boolean res = scheduleController.addSchedule(createSchedule);
            if (res) {
                new OptionPaneAddedSuccess(homeFrame, res, "Sucess fully shedule added");
            } else {
                new OptionPaneAddedSuccess(homeFrame, res, "ooops somthing went wrong");
            }
        } catch (SQLException ex) {
            Logger.getLogger(MakeShedulePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MakeShedulePanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     *
     * @return new schedule id
     */
    private String sheduleID() {
        String newID = null;
        try {
            newID = IDGenarator.getNewID("schedule", "scheduleId", "S");

        } catch (SQLException ex) {
            Logger.getLogger(MemberRegPanel.class
                    .getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MemberRegPanel.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        return newID;
    }

    private String getLastScheduleNum() {
        String newSchduleNum = null;
        try {

            Schedule currentSchedule = controllerFactory.getScheduleController().getCurrentSchedule(memberShipNumber);
            if (currentSchedule != null) {
                int id = Integer.parseInt(currentSchedule.getSheduleNumber());
                id++;
                newSchduleNum = Integer.toString(id);

            }

        } catch (SQLException ex) {
            Logger.getLogger(MakeShedulePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MakeShedulePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        return newSchduleNum;
    }

}
