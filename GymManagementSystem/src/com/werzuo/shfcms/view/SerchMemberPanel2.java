/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.werzuo.shfcms.view;

import com.werzuo.shfcms.controller.ExerciseController;
import com.werzuo.shfcms.controller.MesurmentController;
import com.werzuo.shfcms.controller.ScheduleController;
import com.werzuo.shfcms.controller.ScheduleDetailsController;
import com.werzuo.shfcms.controllerfactoryimpl.ControllerFactoryImpl;
import com.werzuo.shfcms.model.Exercise;
import com.werzuo.shfcms.model.Measurement;
import com.werzuo.shfcms.model.Schedule;
import com.werzuo.shfcms.model.ScheduleDetails;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ravindu
 */
public class SerchMemberPanel2 extends javax.swing.JPanel {

    /**
     * Creates new form SerchMemberPanel2
     */
    private String cid;
    private DefaultTableModel dtm;
    private HomeFrame homeFrame;
    private Schedule currentSchedule;

    public SerchMemberPanel2() {
        initComponents();
    }

    public SerchMemberPanel2(HomeFrame homeFrame, String cid) {
        initComponents();
        this.homeFrame = homeFrame;
        this.cid = cid;
        loadSchedule();
        loadMeasurements();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txtHipsButtoks = new javax.swing.JTextField();
        txtLThight = new javax.swing.JTextField();
        lblRight3 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        txtWeight = new javax.swing.JTextField();
        lblRight1 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtAbdomen = new javax.swing.JTextField();
        lblRight2 = new javax.swing.JLabel();
        txtLCalf = new javax.swing.JTextField();
        txtRForeArm = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        lblLeft2 = new javax.swing.JLabel();
        txtRThight = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtHeight = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        lblLeft = new javax.swing.JLabel();
        txtWaist = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        lblLeft1 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtLForeArm = new javax.swing.JTextField();
        txtChest = new javax.swing.JTextField();
        txtNeck = new javax.swing.JTextField();
        txtRArm = new javax.swing.JTextField();
        lblLeft3 = new javax.swing.JLabel();
        txtRCalf = new javax.swing.JTextField();
        lblRight = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txtLArm = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setLayout(null);

        jScrollPane1.setBackground(new Color(0,0,0,0));

        jTable1.setBackground(new Color(0,0,0,0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Exercise", "Rep", "Set"
            }
        ));
        jTable1.setRowHeight(25);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(1).setMinWidth(50);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(50);
            jTable1.getColumnModel().getColumn(2).setMinWidth(50);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(50);
        }
        jTable1.setOpaque(false);
        ((DefaultTableCellRenderer)jTable1.getDefaultRenderer(Object.class)).setOpaque(false);

        add(jScrollPane1);
        jScrollPane1.setBounds(470, 70, 452, 410);
        jScrollPane1.setOpaque(false);
        jScrollPane1.getViewport().setOpaque(false);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Back");
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        add(jLabel6);
        jLabel6.setBounds(820, 490, 100, 40);

        txtHipsButtoks.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtHipsButtoks.setForeground(new java.awt.Color(255, 255, 255));
        txtHipsButtoks.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtHipsButtoks.setCaretColor(new java.awt.Color(255, 255, 255));
        txtHipsButtoks.setOpaque(false);
        txtHipsButtoks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHipsButtoksActionPerformed(evt);
            }
        });
        txtHipsButtoks.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHipsButtoksKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHipsButtoksKeyReleased(evt);
            }
        });
        add(txtHipsButtoks);
        txtHipsButtoks.setBounds(120, 270, 100, 30);

        txtLThight.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtLThight.setForeground(new java.awt.Color(255, 255, 255));
        txtLThight.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLThight.setCaretColor(new java.awt.Color(255, 255, 255));
        txtLThight.setOpaque(false);
        txtLThight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLThightActionPerformed(evt);
            }
        });
        txtLThight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLThightKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLThightKeyReleased(evt);
            }
        });
        add(txtLThight);
        txtLThight.setBounds(330, 60, 100, 30);

        lblRight3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblRight3.setForeground(new java.awt.Color(153, 0, 0));
        lblRight3.setText("R");
        add(lblRight3);
        lblRight3.setBounds(440, 110, 20, 30);

        jLabel37.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel37.setText("Thight");
        add(jLabel37);
        jLabel37.setBounds(250, 60, 100, 30);

        txtWeight.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtWeight.setForeground(new java.awt.Color(255, 255, 255));
        txtWeight.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtWeight.setCaretColor(new java.awt.Color(255, 255, 255));
        txtWeight.setOpaque(false);
        txtWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWeightActionPerformed(evt);
            }
        });
        txtWeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtWeightKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtWeightKeyReleased(evt);
            }
        });
        add(txtWeight);
        txtWeight.setBounds(120, 410, 100, 30);

        lblRight1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblRight1.setForeground(new java.awt.Color(153, 0, 0));
        lblRight1.setText("R");
        add(lblRight1);
        lblRight1.setBounds(440, 220, 20, 30);

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel22.setText("Chest");
        add(jLabel22);
        jLabel22.setBounds(30, 130, 80, 30);

        txtAbdomen.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtAbdomen.setForeground(new java.awt.Color(255, 255, 255));
        txtAbdomen.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtAbdomen.setCaretColor(new java.awt.Color(255, 255, 255));
        txtAbdomen.setOpaque(false);
        txtAbdomen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAbdomenActionPerformed(evt);
            }
        });
        txtAbdomen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAbdomenKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAbdomenKeyReleased(evt);
            }
        });
        add(txtAbdomen);
        txtAbdomen.setBounds(120, 200, 100, 30);

        lblRight2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblRight2.setForeground(new java.awt.Color(153, 0, 0));
        lblRight2.setText("R");
        add(lblRight2);
        lblRight2.setBounds(440, 350, 20, 30);

        txtLCalf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtLCalf.setForeground(new java.awt.Color(255, 255, 255));
        txtLCalf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLCalf.setCaretColor(new java.awt.Color(255, 255, 255));
        txtLCalf.setOpaque(false);
        txtLCalf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLCalfActionPerformed(evt);
            }
        });
        txtLCalf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLCalfKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLCalfKeyReleased(evt);
            }
        });
        add(txtLCalf);
        txtLCalf.setBounds(330, 420, 100, 30);

        txtRForeArm.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtRForeArm.setForeground(new java.awt.Color(255, 255, 255));
        txtRForeArm.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRForeArm.setCaretColor(new java.awt.Color(255, 255, 255));
        txtRForeArm.setOpaque(false);
        txtRForeArm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRForeArmActionPerformed(evt);
            }
        });
        txtRForeArm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRForeArmKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRForeArmKeyReleased(evt);
            }
        });
        add(txtRForeArm);
        txtRForeArm.setBounds(330, 350, 100, 30);

        jLabel34.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel34.setText("Calf");
        add(jLabel34);
        jLabel34.setBounds(250, 420, 60, 30);

        lblLeft2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblLeft2.setForeground(new java.awt.Color(153, 0, 0));
        lblLeft2.setText("L");
        add(lblLeft2);
        lblLeft2.setBounds(440, 420, 20, 30);

        txtRThight.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtRThight.setForeground(new java.awt.Color(255, 255, 255));
        txtRThight.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRThight.setCaretColor(new java.awt.Color(255, 255, 255));
        txtRThight.setOpaque(false);
        txtRThight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRThightActionPerformed(evt);
            }
        });
        txtRThight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRThightKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRThightKeyReleased(evt);
            }
        });
        add(txtRThight);
        txtRThight.setBounds(330, 110, 100, 30);

        jLabel27.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel27.setText("Waist");
        add(jLabel27);
        jLabel27.setBounds(30, 340, 80, 30);

        txtHeight.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtHeight.setForeground(new java.awt.Color(255, 255, 255));
        txtHeight.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtHeight.setCaretColor(new java.awt.Color(255, 255, 255));
        txtHeight.setOpaque(false);
        txtHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHeightActionPerformed(evt);
            }
        });
        txtHeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHeightKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHeightKeyReleased(evt);
            }
        });
        add(txtHeight);
        txtHeight.setBounds(120, 480, 100, 30);

        jLabel35.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel35.setText("Forearm");
        add(jLabel35);
        jLabel35.setBounds(250, 290, 70, 30);

        lblLeft.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblLeft.setForeground(new java.awt.Color(153, 0, 0));
        lblLeft.setText("L");
        add(lblLeft);
        lblLeft.setBounds(440, 170, 20, 30);

        txtWaist.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtWaist.setForeground(new java.awt.Color(255, 255, 255));
        txtWaist.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtWaist.setCaretColor(new java.awt.Color(255, 255, 255));
        txtWaist.setOpaque(false);
        txtWaist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWaistActionPerformed(evt);
            }
        });
        txtWaist.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtWaistKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtWaistKeyReleased(evt);
            }
        });
        add(txtWaist);
        txtWaist.setBounds(120, 340, 100, 30);

        jLabel33.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel33.setText("Height");
        add(jLabel33);
        jLabel33.setBounds(30, 480, 80, 30);

        jLabel26.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel26.setText("Hips Buttoks");
        add(jLabel26);
        jLabel26.setBounds(30, 270, 90, 30);

        lblLeft1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblLeft1.setForeground(new java.awt.Color(153, 0, 0));
        lblLeft1.setText("L");
        add(lblLeft1);
        lblLeft1.setBounds(440, 290, 20, 30);

        jLabel36.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel36.setText("Arm");
        add(jLabel36);
        jLabel36.setBounds(250, 170, 60, 30);

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel25.setText("Abdomen");
        add(jLabel25);
        jLabel25.setBounds(30, 200, 80, 30);

        txtLForeArm.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtLForeArm.setForeground(new java.awt.Color(255, 255, 255));
        txtLForeArm.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLForeArm.setCaretColor(new java.awt.Color(255, 255, 255));
        txtLForeArm.setOpaque(false);
        txtLForeArm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLForeArmActionPerformed(evt);
            }
        });
        txtLForeArm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLForeArmKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLForeArmKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLForeArmKeyTyped(evt);
            }
        });
        add(txtLForeArm);
        txtLForeArm.setBounds(330, 290, 100, 30);

        txtChest.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtChest.setForeground(new java.awt.Color(255, 255, 255));
        txtChest.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtChest.setCaretColor(new java.awt.Color(255, 255, 255));
        txtChest.setOpaque(false);
        txtChest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChestActionPerformed(evt);
            }
        });
        txtChest.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtChestKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtChestKeyReleased(evt);
            }
        });
        add(txtChest);
        txtChest.setBounds(120, 130, 100, 30);

        txtNeck.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtNeck.setForeground(new java.awt.Color(255, 255, 255));
        txtNeck.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNeck.setCaretColor(new java.awt.Color(255, 255, 255));
        txtNeck.setOpaque(false);
        txtNeck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNeckActionPerformed(evt);
            }
        });
        txtNeck.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNeckKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNeckKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNeckKeyTyped(evt);
            }
        });
        add(txtNeck);
        txtNeck.setBounds(120, 60, 100, 30);

        txtRArm.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtRArm.setForeground(new java.awt.Color(255, 255, 255));
        txtRArm.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRArm.setCaretColor(new java.awt.Color(255, 255, 255));
        txtRArm.setOpaque(false);
        txtRArm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRArmActionPerformed(evt);
            }
        });
        txtRArm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRArmKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRArmKeyReleased(evt);
            }
        });
        add(txtRArm);
        txtRArm.setBounds(330, 220, 100, 30);

        lblLeft3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblLeft3.setForeground(new java.awt.Color(153, 0, 0));
        lblLeft3.setText("L");
        add(lblLeft3);
        lblLeft3.setBounds(440, 60, 20, 30);

        txtRCalf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtRCalf.setForeground(new java.awt.Color(255, 255, 255));
        txtRCalf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRCalf.setCaretColor(new java.awt.Color(255, 255, 255));
        txtRCalf.setOpaque(false);
        txtRCalf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRCalfActionPerformed(evt);
            }
        });
        txtRCalf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRCalfKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRCalfKeyReleased(evt);
            }
        });
        add(txtRCalf);
        txtRCalf.setBounds(330, 480, 100, 30);

        lblRight.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblRight.setForeground(new java.awt.Color(153, 0, 0));
        lblRight.setText("R");
        add(lblRight);
        lblRight.setBounds(440, 480, 20, 30);

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel21.setText("Neck");
        add(jLabel21);
        jLabel21.setBounds(30, 60, 80, 30);

        jLabel28.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel28.setText("Weight");
        add(jLabel28);
        jLabel28.setBounds(30, 410, 80, 30);

        txtLArm.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtLArm.setForeground(new java.awt.Color(255, 255, 255));
        txtLArm.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLArm.setCaretColor(new java.awt.Color(255, 255, 255));
        txtLArm.setOpaque(false);
        txtLArm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLArmActionPerformed(evt);
            }
        });
        txtLArm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLArmKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLArmKeyReleased(evt);
            }
        });
        add(txtLArm);
        txtLArm.setBounds(330, 170, 100, 30);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/werzuo/shfcms/images/Untitled-1.png"))); // NOI18N
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(43, 227, 117), 2));
        add(jLabel3);
        jLabel3.setBounds(0, 0, 970, 570);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/werzuo/shfcms/images/panelBody.PNG"))); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(0, 0, 970, 570);
    }// </editor-fold>//GEN-END:initComponents

    private void txtHipsButtoksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHipsButtoksActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHipsButtoksActionPerformed

    private void txtHipsButtoksKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHipsButtoksKeyPressed

    }//GEN-LAST:event_txtHipsButtoksKeyPressed

    private void txtHipsButtoksKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHipsButtoksKeyReleased

    }//GEN-LAST:event_txtHipsButtoksKeyReleased

    private void txtLThightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLThightActionPerformed
        txtRArm.requestFocus();
    }//GEN-LAST:event_txtLThightActionPerformed

    private void txtLThightKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLThightKeyPressed

    }//GEN-LAST:event_txtLThightKeyPressed

    private void txtLThightKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLThightKeyReleased

    }//GEN-LAST:event_txtLThightKeyReleased

    private void txtWeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWeightActionPerformed

    private void txtWeightKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWeightKeyPressed

    }//GEN-LAST:event_txtWeightKeyPressed

    private void txtWeightKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWeightKeyReleased

    }//GEN-LAST:event_txtWeightKeyReleased

    private void txtAbdomenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAbdomenActionPerformed
        txtAbdomen.requestFocus();
    }//GEN-LAST:event_txtAbdomenActionPerformed

    private void txtAbdomenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAbdomenKeyPressed

    }//GEN-LAST:event_txtAbdomenKeyPressed

    private void txtAbdomenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAbdomenKeyReleased

    }//GEN-LAST:event_txtAbdomenKeyReleased

    private void txtLCalfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLCalfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLCalfActionPerformed

    private void txtLCalfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLCalfKeyPressed

    }//GEN-LAST:event_txtLCalfKeyPressed

    private void txtLCalfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLCalfKeyReleased

    }//GEN-LAST:event_txtLCalfKeyReleased

    private void txtRForeArmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRForeArmActionPerformed
        txtLForeArm.requestFocus();
    }//GEN-LAST:event_txtRForeArmActionPerformed

    private void txtRForeArmKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRForeArmKeyPressed

    }//GEN-LAST:event_txtRForeArmKeyPressed

    private void txtRForeArmKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRForeArmKeyReleased

    }//GEN-LAST:event_txtRForeArmKeyReleased

    private void txtRThightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRThightActionPerformed
        txtLThight.requestFocus();
    }//GEN-LAST:event_txtRThightActionPerformed

    private void txtRThightKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRThightKeyPressed

    }//GEN-LAST:event_txtRThightKeyPressed

    private void txtRThightKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRThightKeyReleased

    }//GEN-LAST:event_txtRThightKeyReleased

    private void txtHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHeightActionPerformed

    private void txtHeightKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHeightKeyPressed

    }//GEN-LAST:event_txtHeightKeyPressed

    private void txtHeightKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHeightKeyReleased

    }//GEN-LAST:event_txtHeightKeyReleased

    private void txtWaistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWaistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWaistActionPerformed

    private void txtWaistKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWaistKeyPressed

    }//GEN-LAST:event_txtWaistKeyPressed

    private void txtWaistKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWaistKeyReleased

    }//GEN-LAST:event_txtWaistKeyReleased

    private void txtLForeArmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLForeArmActionPerformed
        txtRCalf.requestFocus();
    }//GEN-LAST:event_txtLForeArmActionPerformed

    private void txtLForeArmKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLForeArmKeyPressed

    }//GEN-LAST:event_txtLForeArmKeyPressed

    private void txtLForeArmKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLForeArmKeyReleased

    }//GEN-LAST:event_txtLForeArmKeyReleased

    private void txtLForeArmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLForeArmKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLForeArmKeyTyped

    private void txtChestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChestActionPerformed
        txtAbdomen.requestFocus();
    }//GEN-LAST:event_txtChestActionPerformed

    private void txtChestKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChestKeyPressed

    }//GEN-LAST:event_txtChestKeyPressed

    private void txtChestKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChestKeyReleased

    }//GEN-LAST:event_txtChestKeyReleased

    private void txtNeckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNeckActionPerformed

    }//GEN-LAST:event_txtNeckActionPerformed

    private void txtNeckKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNeckKeyPressed

    }//GEN-LAST:event_txtNeckKeyPressed

    private void txtNeckKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNeckKeyReleased

    }//GEN-LAST:event_txtNeckKeyReleased

    private void txtNeckKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNeckKeyTyped

    }//GEN-LAST:event_txtNeckKeyTyped

    private void txtRArmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRArmActionPerformed
        txtLArm.requestFocus();
    }//GEN-LAST:event_txtRArmActionPerformed

    private void txtRArmKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRArmKeyPressed

    }//GEN-LAST:event_txtRArmKeyPressed

    private void txtRArmKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRArmKeyReleased

    }//GEN-LAST:event_txtRArmKeyReleased

    private void txtRCalfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRCalfActionPerformed
        txtLCalf.requestFocus();
    }//GEN-LAST:event_txtRCalfActionPerformed

    private void txtRCalfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRCalfKeyPressed

    }//GEN-LAST:event_txtRCalfKeyPressed

    private void txtRCalfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRCalfKeyReleased

    }//GEN-LAST:event_txtRCalfKeyReleased

    private void txtLArmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLArmActionPerformed
        txtRForeArm.requestFocus();
    }//GEN-LAST:event_txtLArmActionPerformed

    private void txtLArmKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLArmKeyPressed

    }//GEN-LAST:event_txtLArmKeyPressed

    private void txtLArmKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLArmKeyReleased

    }//GEN-LAST:event_txtLArmKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblLeft;
    private javax.swing.JLabel lblLeft1;
    private javax.swing.JLabel lblLeft2;
    private javax.swing.JLabel lblLeft3;
    private javax.swing.JLabel lblRight;
    private javax.swing.JLabel lblRight1;
    private javax.swing.JLabel lblRight2;
    private javax.swing.JLabel lblRight3;
    private javax.swing.JTextField txtAbdomen;
    private javax.swing.JTextField txtChest;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtHipsButtoks;
    private javax.swing.JTextField txtLArm;
    private javax.swing.JTextField txtLCalf;
    private javax.swing.JTextField txtLForeArm;
    private javax.swing.JTextField txtLThight;
    private javax.swing.JTextField txtNeck;
    private javax.swing.JTextField txtRArm;
    private javax.swing.JTextField txtRCalf;
    private javax.swing.JTextField txtRForeArm;
    private javax.swing.JTextField txtRThight;
    private javax.swing.JTextField txtWaist;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables

    /**
     * load a schedule to the table
     */
    private void loadSchedule() {
        try {
            ScheduleController scheduleController
                    = new ControllerFactoryImpl().getScheduleController();
            currentSchedule = scheduleController.getCurrentSchedule(cid);
            if (currentSchedule != null) {
                ScheduleDetailsController scheduleDetailsController
                        = new ControllerFactoryImpl().getScheduleDetailsController();
                ArrayList<ScheduleDetails> scheduleDetails = scheduleDetailsController.getScheduleDetails(currentSchedule.getScheduleID());

                ExerciseController exerciseController
                        = new ControllerFactoryImpl().getExerciseController();

                dtm = (DefaultTableModel) jTable1.getModel();
                dtm.setRowCount(0);

                for (ScheduleDetails scheduleDetail : scheduleDetails) {
                    Exercise searchExercise = exerciseController.searchExercise(scheduleDetail.getEid());
                    Object[] row = {searchExercise.getDescription(), scheduleDetail.getRep(), scheduleDetail.getSet()};
                    dtm.addRow(row);
                }
            } else {
                new OptionPaneAddedSuccess(homeFrame, true, "This Member has no Schedule..");
            }
        } catch (SQLException ex) {
            Logger.getLogger(SerchMemberPanel2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SerchMemberPanel2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * load the measurements
     */
    private void loadMeasurements() {
        try {
            MesurmentController mesurmentController
                    = new ControllerFactoryImpl().getMesurmentController();
            Measurement measurements
                    = mesurmentController.searchMeasurmentByScheduleId(currentSchedule.getScheduleID());

            if (measurements != null) {
                txtNeck.setText(Double.toString(measurements.getNeck()));
                txtChest.setText(Double.toString(measurements.getChest()));
                txtAbdomen.setText(Double.toString(measurements.getAbdomen()));
                txtHipsButtoks.setText(Double.toString(measurements.getHipsButtooks()));
                txtWaist.setText(Double.toString(measurements.getWaist()));
                txtWeight.setText(Double.toString(measurements.getWeight()));
                txtHeight.setText(Double.toString(measurements.getHeight()));
                txtLThight.setText(Double.toString(measurements.getThightLeft()));
                txtRThight.setText(Double.toString(measurements.getThightRight()));
                txtLArm.setText(Double.toString(measurements.getArmLeft()));
                txtRArm.setText(Double.toString(measurements.getArmRight()));
                txtLCalf.setText(Double.toString(measurements.getCalfLeft()));
                txtRCalf.setText(Double.toString(measurements.getCalfRight()));
                txtLForeArm.setText(Double.toString(measurements.getForearmLeft()));
                txtRForeArm.setText(Double.toString(measurements.getForearmRight()));
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SerchMemberPanel2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(SerchMemberPanel2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
